
DIO_TEST.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007b2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000aec  00000000  00000000  00000808  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000883  00000000  00000000  000012f4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 b8 03 	call	0x770	; 0x770 <main>
  78:	0c 94 d7 03 	jmp	0x7ae	; 0x7ae <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <DIO_voidInit>:
/* MCAL layer */
#include "DIO_interface.h"
#include "DIO_private.h"
#include "DIO_config.h"
void DIO_voidInit(void)
{
  80:	df 93       	push	r29
  82:	cf 93       	push	r28
  84:	cd b7       	in	r28, 0x3d	; 61
  86:	de b7       	in	r29, 0x3e	; 62
    DIO_DDRB_REG = CONC(DIO_u8_PB7_DIRECTION,DIO_u8_PB6_DIRECTION,DIO_u8_PB5_DIRECTION,DIO_u8_PB4_DIRECTION
  88:	e4 e2       	ldi	r30, 0x24	; 36
  8a:	f0 e0       	ldi	r31, 0x00	; 0
  8c:	80 e2       	ldi	r24, 0x20	; 32
  8e:	80 83       	st	Z, r24
    				   ,DIO_u8_PB3_DIRECTION,DIO_u8_PB2_DIRECTION,DIO_u8_PB1_DIRECTION,DIO_u8_PB0_DIRECTION);
    DIO_DDRC_REG = CONC(DIO_u8_PC7_DIRECTION,DIO_u8_PC6_DIRECTION,DIO_u8_PC5_DIRECTION,DIO_u8_PC4_DIRECTION
  90:	e7 e2       	ldi	r30, 0x27	; 39
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	10 82       	st	Z, r1
                       ,DIO_u8_PC3_DIRECTION,DIO_u8_PC2_DIRECTION,DIO_u8_PC1_DIRECTION,DIO_u8_PC0_DIRECTION);
    DIO_DDRD_REG = CONC(DIO_u8_PD7_DIRECTION,DIO_u8_PD6_DIRECTION,DIO_u8_PD5_DIRECTION,DIO_u8_PD4_DIRECTION
  96:	ea e2       	ldi	r30, 0x2A	; 42
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	10 82       	st	Z, r1
                       ,DIO_u8_PD3_DIRECTION,DIO_u8_PD2_DIRECTION,DIO_u8_PD1_DIRECTION,DIO_u8_PD0_DIRECTION);
    /*INITIAL VALUES FOR PINS*/                
     DIO_PORTB_REG = CONC(DIO_u8_PB7_VALUE,DIO_u8_PB6_VALUE,DIO_u8_PB5_VALUE,DIO_u8_PB4_VALUE
  9c:	e5 e2       	ldi	r30, 0x25	; 37
  9e:	f0 e0       	ldi	r31, 0x00	; 0
  a0:	80 e3       	ldi	r24, 0x30	; 48
  a2:	80 83       	st	Z, r24
                         ,DIO_u8_PB3_VALUE,DIO_u8_PB2_VALUE,DIO_u8_PB1_VALUE,DIO_u8_PB0_VALUE);
     DIO_PORTC_REG = CONC(DIO_u8_PC7_VALUE,DIO_u8_PC6_VALUE,DIO_u8_PC5_VALUE,DIO_u8_PC4_VALUE
  a4:	e8 e2       	ldi	r30, 0x28	; 40
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	88 e0       	ldi	r24, 0x08	; 8
  aa:	80 83       	st	Z, r24
                         ,DIO_u8_PC3_VALUE,DIO_u8_PC2_VALUE,DIO_u8_PC1_VALUE,DIO_u8_PC0_VALUE);
     DIO_PORTD_REG = CONC(DIO_u8_PD7_VALUE,DIO_u8_PD6_VALUE,DIO_u8_PD5_VALUE,DIO_u8_PD4_VALUE
  ac:	eb e2       	ldi	r30, 0x2B	; 43
  ae:	f0 e0       	ldi	r31, 0x00	; 0
  b0:	88 e0       	ldi	r24, 0x08	; 8
  b2:	80 83       	st	Z, r24
                         ,DIO_u8_PD3_VALUE,DIO_u8_PD2_VALUE,DIO_u8_PD1_VALUE,DIO_u8_PD0_VALUE);
}
  b4:	cf 91       	pop	r28
  b6:	df 91       	pop	r29
  b8:	08 95       	ret

000000ba <DIO_u8SetPinDirection>:
                        
u8 DIO_u8SetPinDirection  (u8 Copy_u8PortId, u8 Copy_u8PinId,u8 Copy_u8PinDirection)
{
  ba:	df 93       	push	r29
  bc:	cf 93       	push	r28
  be:	cd b7       	in	r28, 0x3d	; 61
  c0:	de b7       	in	r29, 0x3e	; 62
  c2:	2c 97       	sbiw	r28, 0x0c	; 12
  c4:	0f b6       	in	r0, 0x3f	; 63
  c6:	f8 94       	cli
  c8:	de bf       	out	0x3e, r29	; 62
  ca:	0f be       	out	0x3f, r0	; 63
  cc:	cd bf       	out	0x3d, r28	; 61
  ce:	8a 83       	std	Y+2, r24	; 0x02
  d0:	6b 83       	std	Y+3, r22	; 0x03
  d2:	4c 83       	std	Y+4, r20	; 0x04
    u8 Local_u8ReturnState = STD_TYPE_OK ;
  d4:	81 e0       	ldi	r24, 0x01	; 1
  d6:	89 83       	std	Y+1, r24	; 0x01
    if((Copy_u8PortId <= DIO_u8_PORTD) && (Copy_u8PinId <= DIO_u8_PIN7) && ((Copy_u8PinDirection == DIO_u8_INPUT)||(Copy_u8PinDirection == DIO_u8_OUTPUT)) )
  d8:	8a 81       	ldd	r24, Y+2	; 0x02
  da:	83 30       	cpi	r24, 0x03	; 3
  dc:	08 f0       	brcs	.+2      	; 0xe0 <DIO_u8SetPinDirection+0x26>
  de:	c8 c0       	rjmp	.+400    	; 0x270 <DIO_u8SetPinDirection+0x1b6>
  e0:	8b 81       	ldd	r24, Y+3	; 0x03
  e2:	88 30       	cpi	r24, 0x08	; 8
  e4:	08 f0       	brcs	.+2      	; 0xe8 <DIO_u8SetPinDirection+0x2e>
  e6:	c4 c0       	rjmp	.+392    	; 0x270 <DIO_u8SetPinDirection+0x1b6>
  e8:	8c 81       	ldd	r24, Y+4	; 0x04
  ea:	88 23       	and	r24, r24
  ec:	21 f0       	breq	.+8      	; 0xf6 <DIO_u8SetPinDirection+0x3c>
  ee:	8c 81       	ldd	r24, Y+4	; 0x04
  f0:	81 30       	cpi	r24, 0x01	; 1
  f2:	09 f0       	breq	.+2      	; 0xf6 <DIO_u8SetPinDirection+0x3c>
  f4:	bd c0       	rjmp	.+378    	; 0x270 <DIO_u8SetPinDirection+0x1b6>
    {
        switch (Copy_u8PortId)
  f6:	8a 81       	ldd	r24, Y+2	; 0x02
  f8:	28 2f       	mov	r18, r24
  fa:	30 e0       	ldi	r19, 0x00	; 0
  fc:	3c 87       	std	Y+12, r19	; 0x0c
  fe:	2b 87       	std	Y+11, r18	; 0x0b
 100:	8b 85       	ldd	r24, Y+11	; 0x0b
 102:	9c 85       	ldd	r25, Y+12	; 0x0c
 104:	81 30       	cpi	r24, 0x01	; 1
 106:	91 05       	cpc	r25, r1
 108:	09 f4       	brne	.+2      	; 0x10c <DIO_u8SetPinDirection+0x52>
 10a:	43 c0       	rjmp	.+134    	; 0x192 <DIO_u8SetPinDirection+0xd8>
 10c:	2b 85       	ldd	r18, Y+11	; 0x0b
 10e:	3c 85       	ldd	r19, Y+12	; 0x0c
 110:	22 30       	cpi	r18, 0x02	; 2
 112:	31 05       	cpc	r19, r1
 114:	09 f4       	brne	.+2      	; 0x118 <DIO_u8SetPinDirection+0x5e>
 116:	75 c0       	rjmp	.+234    	; 0x202 <DIO_u8SetPinDirection+0x148>
 118:	8b 85       	ldd	r24, Y+11	; 0x0b
 11a:	9c 85       	ldd	r25, Y+12	; 0x0c
 11c:	00 97       	sbiw	r24, 0x00	; 0
 11e:	09 f0       	breq	.+2      	; 0x122 <DIO_u8SetPinDirection+0x68>
 120:	a8 c0       	rjmp	.+336    	; 0x272 <DIO_u8SetPinDirection+0x1b8>
        {
        case DIO_u8_PORTB : 
            switch (Copy_u8PinDirection)
 122:	8c 81       	ldd	r24, Y+4	; 0x04
 124:	28 2f       	mov	r18, r24
 126:	30 e0       	ldi	r19, 0x00	; 0
 128:	3a 87       	std	Y+10, r19	; 0x0a
 12a:	29 87       	std	Y+9, r18	; 0x09
 12c:	89 85       	ldd	r24, Y+9	; 0x09
 12e:	9a 85       	ldd	r25, Y+10	; 0x0a
 130:	00 97       	sbiw	r24, 0x00	; 0
 132:	d1 f0       	breq	.+52     	; 0x168 <DIO_u8SetPinDirection+0xae>
 134:	29 85       	ldd	r18, Y+9	; 0x09
 136:	3a 85       	ldd	r19, Y+10	; 0x0a
 138:	21 30       	cpi	r18, 0x01	; 1
 13a:	31 05       	cpc	r19, r1
 13c:	09 f0       	breq	.+2      	; 0x140 <DIO_u8SetPinDirection+0x86>
 13e:	99 c0       	rjmp	.+306    	; 0x272 <DIO_u8SetPinDirection+0x1b8>
            {
                case DIO_u8_OUTPUT : SET_BIT(DIO_DDRB_REG,Copy_u8PinId)  ; break;
 140:	a4 e2       	ldi	r26, 0x24	; 36
 142:	b0 e0       	ldi	r27, 0x00	; 0
 144:	e4 e2       	ldi	r30, 0x24	; 36
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	80 81       	ld	r24, Z
 14a:	48 2f       	mov	r20, r24
 14c:	8b 81       	ldd	r24, Y+3	; 0x03
 14e:	28 2f       	mov	r18, r24
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	02 2e       	mov	r0, r18
 158:	02 c0       	rjmp	.+4      	; 0x15e <DIO_u8SetPinDirection+0xa4>
 15a:	88 0f       	add	r24, r24
 15c:	99 1f       	adc	r25, r25
 15e:	0a 94       	dec	r0
 160:	e2 f7       	brpl	.-8      	; 0x15a <DIO_u8SetPinDirection+0xa0>
 162:	84 2b       	or	r24, r20
 164:	8c 93       	st	X, r24
 166:	85 c0       	rjmp	.+266    	; 0x272 <DIO_u8SetPinDirection+0x1b8>
                case DIO_u8_INPUT  : CLR_BIT(DIO_DDRB_REG,Copy_u8PinId)  ; break;
 168:	a4 e2       	ldi	r26, 0x24	; 36
 16a:	b0 e0       	ldi	r27, 0x00	; 0
 16c:	e4 e2       	ldi	r30, 0x24	; 36
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	80 81       	ld	r24, Z
 172:	48 2f       	mov	r20, r24
 174:	8b 81       	ldd	r24, Y+3	; 0x03
 176:	28 2f       	mov	r18, r24
 178:	30 e0       	ldi	r19, 0x00	; 0
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	02 2e       	mov	r0, r18
 180:	02 c0       	rjmp	.+4      	; 0x186 <DIO_u8SetPinDirection+0xcc>
 182:	88 0f       	add	r24, r24
 184:	99 1f       	adc	r25, r25
 186:	0a 94       	dec	r0
 188:	e2 f7       	brpl	.-8      	; 0x182 <DIO_u8SetPinDirection+0xc8>
 18a:	80 95       	com	r24
 18c:	84 23       	and	r24, r20
 18e:	8c 93       	st	X, r24
 190:	70 c0       	rjmp	.+224    	; 0x272 <DIO_u8SetPinDirection+0x1b8>
            }    
            break;
        case DIO_u8_PORTC : 
            switch (Copy_u8PinDirection)
 192:	8c 81       	ldd	r24, Y+4	; 0x04
 194:	28 2f       	mov	r18, r24
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	38 87       	std	Y+8, r19	; 0x08
 19a:	2f 83       	std	Y+7, r18	; 0x07
 19c:	8f 81       	ldd	r24, Y+7	; 0x07
 19e:	98 85       	ldd	r25, Y+8	; 0x08
 1a0:	00 97       	sbiw	r24, 0x00	; 0
 1a2:	d1 f0       	breq	.+52     	; 0x1d8 <DIO_u8SetPinDirection+0x11e>
 1a4:	2f 81       	ldd	r18, Y+7	; 0x07
 1a6:	38 85       	ldd	r19, Y+8	; 0x08
 1a8:	21 30       	cpi	r18, 0x01	; 1
 1aa:	31 05       	cpc	r19, r1
 1ac:	09 f0       	breq	.+2      	; 0x1b0 <DIO_u8SetPinDirection+0xf6>
 1ae:	61 c0       	rjmp	.+194    	; 0x272 <DIO_u8SetPinDirection+0x1b8>
            {
                case DIO_u8_OUTPUT : SET_BIT(DIO_DDRC_REG,Copy_u8PinId)  ; break;
 1b0:	a7 e2       	ldi	r26, 0x27	; 39
 1b2:	b0 e0       	ldi	r27, 0x00	; 0
 1b4:	e7 e2       	ldi	r30, 0x27	; 39
 1b6:	f0 e0       	ldi	r31, 0x00	; 0
 1b8:	80 81       	ld	r24, Z
 1ba:	48 2f       	mov	r20, r24
 1bc:	8b 81       	ldd	r24, Y+3	; 0x03
 1be:	28 2f       	mov	r18, r24
 1c0:	30 e0       	ldi	r19, 0x00	; 0
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	02 2e       	mov	r0, r18
 1c8:	02 c0       	rjmp	.+4      	; 0x1ce <DIO_u8SetPinDirection+0x114>
 1ca:	88 0f       	add	r24, r24
 1cc:	99 1f       	adc	r25, r25
 1ce:	0a 94       	dec	r0
 1d0:	e2 f7       	brpl	.-8      	; 0x1ca <DIO_u8SetPinDirection+0x110>
 1d2:	84 2b       	or	r24, r20
 1d4:	8c 93       	st	X, r24
 1d6:	4d c0       	rjmp	.+154    	; 0x272 <DIO_u8SetPinDirection+0x1b8>
                case DIO_u8_INPUT  : CLR_BIT(DIO_DDRC_REG,Copy_u8PinId)  ; break;  
 1d8:	a7 e2       	ldi	r26, 0x27	; 39
 1da:	b0 e0       	ldi	r27, 0x00	; 0
 1dc:	e7 e2       	ldi	r30, 0x27	; 39
 1de:	f0 e0       	ldi	r31, 0x00	; 0
 1e0:	80 81       	ld	r24, Z
 1e2:	48 2f       	mov	r20, r24
 1e4:	8b 81       	ldd	r24, Y+3	; 0x03
 1e6:	28 2f       	mov	r18, r24
 1e8:	30 e0       	ldi	r19, 0x00	; 0
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	02 2e       	mov	r0, r18
 1f0:	02 c0       	rjmp	.+4      	; 0x1f6 <DIO_u8SetPinDirection+0x13c>
 1f2:	88 0f       	add	r24, r24
 1f4:	99 1f       	adc	r25, r25
 1f6:	0a 94       	dec	r0
 1f8:	e2 f7       	brpl	.-8      	; 0x1f2 <DIO_u8SetPinDirection+0x138>
 1fa:	80 95       	com	r24
 1fc:	84 23       	and	r24, r20
 1fe:	8c 93       	st	X, r24
 200:	38 c0       	rjmp	.+112    	; 0x272 <DIO_u8SetPinDirection+0x1b8>
            } 
            break;
        case DIO_u8_PORTD : 
            switch (Copy_u8PinDirection)
 202:	8c 81       	ldd	r24, Y+4	; 0x04
 204:	28 2f       	mov	r18, r24
 206:	30 e0       	ldi	r19, 0x00	; 0
 208:	3e 83       	std	Y+6, r19	; 0x06
 20a:	2d 83       	std	Y+5, r18	; 0x05
 20c:	8d 81       	ldd	r24, Y+5	; 0x05
 20e:	9e 81       	ldd	r25, Y+6	; 0x06
 210:	00 97       	sbiw	r24, 0x00	; 0
 212:	c9 f0       	breq	.+50     	; 0x246 <DIO_u8SetPinDirection+0x18c>
 214:	2d 81       	ldd	r18, Y+5	; 0x05
 216:	3e 81       	ldd	r19, Y+6	; 0x06
 218:	21 30       	cpi	r18, 0x01	; 1
 21a:	31 05       	cpc	r19, r1
 21c:	51 f5       	brne	.+84     	; 0x272 <DIO_u8SetPinDirection+0x1b8>
            {
                case DIO_u8_OUTPUT : SET_BIT(DIO_DDRD_REG,Copy_u8PinId)  ; break;
 21e:	aa e2       	ldi	r26, 0x2A	; 42
 220:	b0 e0       	ldi	r27, 0x00	; 0
 222:	ea e2       	ldi	r30, 0x2A	; 42
 224:	f0 e0       	ldi	r31, 0x00	; 0
 226:	80 81       	ld	r24, Z
 228:	48 2f       	mov	r20, r24
 22a:	8b 81       	ldd	r24, Y+3	; 0x03
 22c:	28 2f       	mov	r18, r24
 22e:	30 e0       	ldi	r19, 0x00	; 0
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	02 2e       	mov	r0, r18
 236:	02 c0       	rjmp	.+4      	; 0x23c <DIO_u8SetPinDirection+0x182>
 238:	88 0f       	add	r24, r24
 23a:	99 1f       	adc	r25, r25
 23c:	0a 94       	dec	r0
 23e:	e2 f7       	brpl	.-8      	; 0x238 <DIO_u8SetPinDirection+0x17e>
 240:	84 2b       	or	r24, r20
 242:	8c 93       	st	X, r24
 244:	16 c0       	rjmp	.+44     	; 0x272 <DIO_u8SetPinDirection+0x1b8>
                case DIO_u8_INPUT  : CLR_BIT(DIO_DDRD_REG,Copy_u8PinId)  ; break;  
 246:	aa e2       	ldi	r26, 0x2A	; 42
 248:	b0 e0       	ldi	r27, 0x00	; 0
 24a:	ea e2       	ldi	r30, 0x2A	; 42
 24c:	f0 e0       	ldi	r31, 0x00	; 0
 24e:	80 81       	ld	r24, Z
 250:	48 2f       	mov	r20, r24
 252:	8b 81       	ldd	r24, Y+3	; 0x03
 254:	28 2f       	mov	r18, r24
 256:	30 e0       	ldi	r19, 0x00	; 0
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	02 2e       	mov	r0, r18
 25e:	02 c0       	rjmp	.+4      	; 0x264 <DIO_u8SetPinDirection+0x1aa>
 260:	88 0f       	add	r24, r24
 262:	99 1f       	adc	r25, r25
 264:	0a 94       	dec	r0
 266:	e2 f7       	brpl	.-8      	; 0x260 <DIO_u8SetPinDirection+0x1a6>
 268:	80 95       	com	r24
 26a:	84 23       	and	r24, r20
 26c:	8c 93       	st	X, r24
 26e:	01 c0       	rjmp	.+2      	; 0x272 <DIO_u8SetPinDirection+0x1b8>
            } 
        }
    }
    else 
    {
        Local_u8ReturnState = STD_TYPE_NOK;
 270:	19 82       	std	Y+1, r1	; 0x01
    }
    return Local_u8ReturnState;
 272:	89 81       	ldd	r24, Y+1	; 0x01
}
 274:	2c 96       	adiw	r28, 0x0c	; 12
 276:	0f b6       	in	r0, 0x3f	; 63
 278:	f8 94       	cli
 27a:	de bf       	out	0x3e, r29	; 62
 27c:	0f be       	out	0x3f, r0	; 63
 27e:	cd bf       	out	0x3d, r28	; 61
 280:	cf 91       	pop	r28
 282:	df 91       	pop	r29
 284:	08 95       	ret

00000286 <DIO_u8SetPinValue>:

u8 DIO_u8SetPinValue      (u8 Copy_u8PortId,u8 Copy_u8PinId,u8 Copy_u8PinValue)
{
 286:	df 93       	push	r29
 288:	cf 93       	push	r28
 28a:	cd b7       	in	r28, 0x3d	; 61
 28c:	de b7       	in	r29, 0x3e	; 62
 28e:	2c 97       	sbiw	r28, 0x0c	; 12
 290:	0f b6       	in	r0, 0x3f	; 63
 292:	f8 94       	cli
 294:	de bf       	out	0x3e, r29	; 62
 296:	0f be       	out	0x3f, r0	; 63
 298:	cd bf       	out	0x3d, r28	; 61
 29a:	8a 83       	std	Y+2, r24	; 0x02
 29c:	6b 83       	std	Y+3, r22	; 0x03
 29e:	4c 83       	std	Y+4, r20	; 0x04
    u8 Local_u8ReturnState = STD_TYPE_OK;
 2a0:	81 e0       	ldi	r24, 0x01	; 1
 2a2:	89 83       	std	Y+1, r24	; 0x01
    if((Copy_u8PortId <= DIO_u8_PORTD) && (Copy_u8PinId <=DIO_u8_PIN7)&& ((Copy_u8PinValue == DIO_u8_HIGH)||(Copy_u8PinValue == DIO_u8_LOW)))
 2a4:	8a 81       	ldd	r24, Y+2	; 0x02
 2a6:	83 30       	cpi	r24, 0x03	; 3
 2a8:	08 f0       	brcs	.+2      	; 0x2ac <DIO_u8SetPinValue+0x26>
 2aa:	c8 c0       	rjmp	.+400    	; 0x43c <DIO_u8SetPinValue+0x1b6>
 2ac:	8b 81       	ldd	r24, Y+3	; 0x03
 2ae:	88 30       	cpi	r24, 0x08	; 8
 2b0:	08 f0       	brcs	.+2      	; 0x2b4 <DIO_u8SetPinValue+0x2e>
 2b2:	c4 c0       	rjmp	.+392    	; 0x43c <DIO_u8SetPinValue+0x1b6>
 2b4:	8c 81       	ldd	r24, Y+4	; 0x04
 2b6:	81 30       	cpi	r24, 0x01	; 1
 2b8:	21 f0       	breq	.+8      	; 0x2c2 <DIO_u8SetPinValue+0x3c>
 2ba:	8c 81       	ldd	r24, Y+4	; 0x04
 2bc:	88 23       	and	r24, r24
 2be:	09 f0       	breq	.+2      	; 0x2c2 <DIO_u8SetPinValue+0x3c>
 2c0:	bd c0       	rjmp	.+378    	; 0x43c <DIO_u8SetPinValue+0x1b6>
    {
        switch (Copy_u8PortId)
 2c2:	8a 81       	ldd	r24, Y+2	; 0x02
 2c4:	28 2f       	mov	r18, r24
 2c6:	30 e0       	ldi	r19, 0x00	; 0
 2c8:	3c 87       	std	Y+12, r19	; 0x0c
 2ca:	2b 87       	std	Y+11, r18	; 0x0b
 2cc:	8b 85       	ldd	r24, Y+11	; 0x0b
 2ce:	9c 85       	ldd	r25, Y+12	; 0x0c
 2d0:	81 30       	cpi	r24, 0x01	; 1
 2d2:	91 05       	cpc	r25, r1
 2d4:	09 f4       	brne	.+2      	; 0x2d8 <DIO_u8SetPinValue+0x52>
 2d6:	43 c0       	rjmp	.+134    	; 0x35e <DIO_u8SetPinValue+0xd8>
 2d8:	2b 85       	ldd	r18, Y+11	; 0x0b
 2da:	3c 85       	ldd	r19, Y+12	; 0x0c
 2dc:	22 30       	cpi	r18, 0x02	; 2
 2de:	31 05       	cpc	r19, r1
 2e0:	09 f4       	brne	.+2      	; 0x2e4 <DIO_u8SetPinValue+0x5e>
 2e2:	75 c0       	rjmp	.+234    	; 0x3ce <DIO_u8SetPinValue+0x148>
 2e4:	8b 85       	ldd	r24, Y+11	; 0x0b
 2e6:	9c 85       	ldd	r25, Y+12	; 0x0c
 2e8:	00 97       	sbiw	r24, 0x00	; 0
 2ea:	09 f0       	breq	.+2      	; 0x2ee <DIO_u8SetPinValue+0x68>
 2ec:	a8 c0       	rjmp	.+336    	; 0x43e <DIO_u8SetPinValue+0x1b8>
        {
        case DIO_u8_PORTB : 
            switch (Copy_u8PinValue)
 2ee:	8c 81       	ldd	r24, Y+4	; 0x04
 2f0:	28 2f       	mov	r18, r24
 2f2:	30 e0       	ldi	r19, 0x00	; 0
 2f4:	3a 87       	std	Y+10, r19	; 0x0a
 2f6:	29 87       	std	Y+9, r18	; 0x09
 2f8:	89 85       	ldd	r24, Y+9	; 0x09
 2fa:	9a 85       	ldd	r25, Y+10	; 0x0a
 2fc:	00 97       	sbiw	r24, 0x00	; 0
 2fe:	d1 f0       	breq	.+52     	; 0x334 <DIO_u8SetPinValue+0xae>
 300:	29 85       	ldd	r18, Y+9	; 0x09
 302:	3a 85       	ldd	r19, Y+10	; 0x0a
 304:	21 30       	cpi	r18, 0x01	; 1
 306:	31 05       	cpc	r19, r1
 308:	09 f0       	breq	.+2      	; 0x30c <DIO_u8SetPinValue+0x86>
 30a:	99 c0       	rjmp	.+306    	; 0x43e <DIO_u8SetPinValue+0x1b8>
            {
                case DIO_u8_HIGH : SET_BIT(DIO_PORTB_REG,Copy_u8PinId)   ; break;
 30c:	a5 e2       	ldi	r26, 0x25	; 37
 30e:	b0 e0       	ldi	r27, 0x00	; 0
 310:	e5 e2       	ldi	r30, 0x25	; 37
 312:	f0 e0       	ldi	r31, 0x00	; 0
 314:	80 81       	ld	r24, Z
 316:	48 2f       	mov	r20, r24
 318:	8b 81       	ldd	r24, Y+3	; 0x03
 31a:	28 2f       	mov	r18, r24
 31c:	30 e0       	ldi	r19, 0x00	; 0
 31e:	81 e0       	ldi	r24, 0x01	; 1
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	02 2e       	mov	r0, r18
 324:	02 c0       	rjmp	.+4      	; 0x32a <DIO_u8SetPinValue+0xa4>
 326:	88 0f       	add	r24, r24
 328:	99 1f       	adc	r25, r25
 32a:	0a 94       	dec	r0
 32c:	e2 f7       	brpl	.-8      	; 0x326 <DIO_u8SetPinValue+0xa0>
 32e:	84 2b       	or	r24, r20
 330:	8c 93       	st	X, r24
 332:	85 c0       	rjmp	.+266    	; 0x43e <DIO_u8SetPinValue+0x1b8>
                case DIO_u8_LOW  : CLR_BIT(DIO_PORTB_REG,Copy_u8PinId)   ; break;  
 334:	a5 e2       	ldi	r26, 0x25	; 37
 336:	b0 e0       	ldi	r27, 0x00	; 0
 338:	e5 e2       	ldi	r30, 0x25	; 37
 33a:	f0 e0       	ldi	r31, 0x00	; 0
 33c:	80 81       	ld	r24, Z
 33e:	48 2f       	mov	r20, r24
 340:	8b 81       	ldd	r24, Y+3	; 0x03
 342:	28 2f       	mov	r18, r24
 344:	30 e0       	ldi	r19, 0x00	; 0
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	02 2e       	mov	r0, r18
 34c:	02 c0       	rjmp	.+4      	; 0x352 <DIO_u8SetPinValue+0xcc>
 34e:	88 0f       	add	r24, r24
 350:	99 1f       	adc	r25, r25
 352:	0a 94       	dec	r0
 354:	e2 f7       	brpl	.-8      	; 0x34e <DIO_u8SetPinValue+0xc8>
 356:	80 95       	com	r24
 358:	84 23       	and	r24, r20
 35a:	8c 93       	st	X, r24
 35c:	70 c0       	rjmp	.+224    	; 0x43e <DIO_u8SetPinValue+0x1b8>
            }    
            break;
        case DIO_u8_PORTC : 
            switch (Copy_u8PinValue)
 35e:	8c 81       	ldd	r24, Y+4	; 0x04
 360:	28 2f       	mov	r18, r24
 362:	30 e0       	ldi	r19, 0x00	; 0
 364:	38 87       	std	Y+8, r19	; 0x08
 366:	2f 83       	std	Y+7, r18	; 0x07
 368:	8f 81       	ldd	r24, Y+7	; 0x07
 36a:	98 85       	ldd	r25, Y+8	; 0x08
 36c:	00 97       	sbiw	r24, 0x00	; 0
 36e:	d1 f0       	breq	.+52     	; 0x3a4 <DIO_u8SetPinValue+0x11e>
 370:	2f 81       	ldd	r18, Y+7	; 0x07
 372:	38 85       	ldd	r19, Y+8	; 0x08
 374:	21 30       	cpi	r18, 0x01	; 1
 376:	31 05       	cpc	r19, r1
 378:	09 f0       	breq	.+2      	; 0x37c <DIO_u8SetPinValue+0xf6>
 37a:	61 c0       	rjmp	.+194    	; 0x43e <DIO_u8SetPinValue+0x1b8>
                {
                    case DIO_u8_HIGH : SET_BIT(DIO_PORTC_REG ,Copy_u8PinId)   ; break;
 37c:	a8 e2       	ldi	r26, 0x28	; 40
 37e:	b0 e0       	ldi	r27, 0x00	; 0
 380:	e8 e2       	ldi	r30, 0x28	; 40
 382:	f0 e0       	ldi	r31, 0x00	; 0
 384:	80 81       	ld	r24, Z
 386:	48 2f       	mov	r20, r24
 388:	8b 81       	ldd	r24, Y+3	; 0x03
 38a:	28 2f       	mov	r18, r24
 38c:	30 e0       	ldi	r19, 0x00	; 0
 38e:	81 e0       	ldi	r24, 0x01	; 1
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	02 2e       	mov	r0, r18
 394:	02 c0       	rjmp	.+4      	; 0x39a <DIO_u8SetPinValue+0x114>
 396:	88 0f       	add	r24, r24
 398:	99 1f       	adc	r25, r25
 39a:	0a 94       	dec	r0
 39c:	e2 f7       	brpl	.-8      	; 0x396 <DIO_u8SetPinValue+0x110>
 39e:	84 2b       	or	r24, r20
 3a0:	8c 93       	st	X, r24
 3a2:	4d c0       	rjmp	.+154    	; 0x43e <DIO_u8SetPinValue+0x1b8>
                    case DIO_u8_LOW  : CLR_BIT(DIO_PORTC_REG ,Copy_u8PinId)   ; break;
 3a4:	a8 e2       	ldi	r26, 0x28	; 40
 3a6:	b0 e0       	ldi	r27, 0x00	; 0
 3a8:	e8 e2       	ldi	r30, 0x28	; 40
 3aa:	f0 e0       	ldi	r31, 0x00	; 0
 3ac:	80 81       	ld	r24, Z
 3ae:	48 2f       	mov	r20, r24
 3b0:	8b 81       	ldd	r24, Y+3	; 0x03
 3b2:	28 2f       	mov	r18, r24
 3b4:	30 e0       	ldi	r19, 0x00	; 0
 3b6:	81 e0       	ldi	r24, 0x01	; 1
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	02 2e       	mov	r0, r18
 3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <DIO_u8SetPinValue+0x13c>
 3be:	88 0f       	add	r24, r24
 3c0:	99 1f       	adc	r25, r25
 3c2:	0a 94       	dec	r0
 3c4:	e2 f7       	brpl	.-8      	; 0x3be <DIO_u8SetPinValue+0x138>
 3c6:	80 95       	com	r24
 3c8:	84 23       	and	r24, r20
 3ca:	8c 93       	st	X, r24
 3cc:	38 c0       	rjmp	.+112    	; 0x43e <DIO_u8SetPinValue+0x1b8>
                }
            break;
        case DIO_u8_PORTD : 
            switch (Copy_u8PinValue)
 3ce:	8c 81       	ldd	r24, Y+4	; 0x04
 3d0:	28 2f       	mov	r18, r24
 3d2:	30 e0       	ldi	r19, 0x00	; 0
 3d4:	3e 83       	std	Y+6, r19	; 0x06
 3d6:	2d 83       	std	Y+5, r18	; 0x05
 3d8:	8d 81       	ldd	r24, Y+5	; 0x05
 3da:	9e 81       	ldd	r25, Y+6	; 0x06
 3dc:	00 97       	sbiw	r24, 0x00	; 0
 3de:	c9 f0       	breq	.+50     	; 0x412 <DIO_u8SetPinValue+0x18c>
 3e0:	2d 81       	ldd	r18, Y+5	; 0x05
 3e2:	3e 81       	ldd	r19, Y+6	; 0x06
 3e4:	21 30       	cpi	r18, 0x01	; 1
 3e6:	31 05       	cpc	r19, r1
 3e8:	51 f5       	brne	.+84     	; 0x43e <DIO_u8SetPinValue+0x1b8>
                {
                    case DIO_u8_HIGH : SET_BIT(DIO_PORTD_REG,Copy_u8PinId)   ; break;
 3ea:	ab e2       	ldi	r26, 0x2B	; 43
 3ec:	b0 e0       	ldi	r27, 0x00	; 0
 3ee:	eb e2       	ldi	r30, 0x2B	; 43
 3f0:	f0 e0       	ldi	r31, 0x00	; 0
 3f2:	80 81       	ld	r24, Z
 3f4:	48 2f       	mov	r20, r24
 3f6:	8b 81       	ldd	r24, Y+3	; 0x03
 3f8:	28 2f       	mov	r18, r24
 3fa:	30 e0       	ldi	r19, 0x00	; 0
 3fc:	81 e0       	ldi	r24, 0x01	; 1
 3fe:	90 e0       	ldi	r25, 0x00	; 0
 400:	02 2e       	mov	r0, r18
 402:	02 c0       	rjmp	.+4      	; 0x408 <DIO_u8SetPinValue+0x182>
 404:	88 0f       	add	r24, r24
 406:	99 1f       	adc	r25, r25
 408:	0a 94       	dec	r0
 40a:	e2 f7       	brpl	.-8      	; 0x404 <DIO_u8SetPinValue+0x17e>
 40c:	84 2b       	or	r24, r20
 40e:	8c 93       	st	X, r24
 410:	16 c0       	rjmp	.+44     	; 0x43e <DIO_u8SetPinValue+0x1b8>
                    case DIO_u8_LOW  : CLR_BIT(DIO_PORTD_REG,Copy_u8PinId)   ; break; 
 412:	ab e2       	ldi	r26, 0x2B	; 43
 414:	b0 e0       	ldi	r27, 0x00	; 0
 416:	eb e2       	ldi	r30, 0x2B	; 43
 418:	f0 e0       	ldi	r31, 0x00	; 0
 41a:	80 81       	ld	r24, Z
 41c:	48 2f       	mov	r20, r24
 41e:	8b 81       	ldd	r24, Y+3	; 0x03
 420:	28 2f       	mov	r18, r24
 422:	30 e0       	ldi	r19, 0x00	; 0
 424:	81 e0       	ldi	r24, 0x01	; 1
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	02 2e       	mov	r0, r18
 42a:	02 c0       	rjmp	.+4      	; 0x430 <DIO_u8SetPinValue+0x1aa>
 42c:	88 0f       	add	r24, r24
 42e:	99 1f       	adc	r25, r25
 430:	0a 94       	dec	r0
 432:	e2 f7       	brpl	.-8      	; 0x42c <DIO_u8SetPinValue+0x1a6>
 434:	80 95       	com	r24
 436:	84 23       	and	r24, r20
 438:	8c 93       	st	X, r24
 43a:	01 c0       	rjmp	.+2      	; 0x43e <DIO_u8SetPinValue+0x1b8>
            break;        
        }
    }
    else 
    {
        Local_u8ReturnState = STD_TYPE_NOK;
 43c:	19 82       	std	Y+1, r1	; 0x01
    }
    return Local_u8ReturnState;
 43e:	89 81       	ldd	r24, Y+1	; 0x01
}
 440:	2c 96       	adiw	r28, 0x0c	; 12
 442:	0f b6       	in	r0, 0x3f	; 63
 444:	f8 94       	cli
 446:	de bf       	out	0x3e, r29	; 62
 448:	0f be       	out	0x3f, r0	; 63
 44a:	cd bf       	out	0x3d, r28	; 61
 44c:	cf 91       	pop	r28
 44e:	df 91       	pop	r29
 450:	08 95       	ret

00000452 <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue      (u8 Copy_u8PortId,u8 Copy_u8PinId,u8 *Copy_Pu8PinValue)
{
 452:	df 93       	push	r29
 454:	cf 93       	push	r28
 456:	cd b7       	in	r28, 0x3d	; 61
 458:	de b7       	in	r29, 0x3e	; 62
 45a:	28 97       	sbiw	r28, 0x08	; 8
 45c:	0f b6       	in	r0, 0x3f	; 63
 45e:	f8 94       	cli
 460:	de bf       	out	0x3e, r29	; 62
 462:	0f be       	out	0x3f, r0	; 63
 464:	cd bf       	out	0x3d, r28	; 61
 466:	8b 83       	std	Y+3, r24	; 0x03
 468:	6c 83       	std	Y+4, r22	; 0x04
 46a:	5e 83       	std	Y+6, r21	; 0x06
 46c:	4d 83       	std	Y+5, r20	; 0x05
    u8 Local_u8ReturnState = STD_TYPE_OK;
 46e:	81 e0       	ldi	r24, 0x01	; 1
 470:	8a 83       	std	Y+2, r24	; 0x02
    u8 Local_u8PinValue; // variable to read the pin value
    if((Copy_u8PortId <= DIO_u8_PORTD)&&(Copy_u8PinId <= DIO_u8_PIN7)&&(Copy_Pu8PinValue!=NULL))
 472:	8b 81       	ldd	r24, Y+3	; 0x03
 474:	83 30       	cpi	r24, 0x03	; 3
 476:	08 f0       	brcs	.+2      	; 0x47a <DIO_u8GetPinValue+0x28>
 478:	76 c0       	rjmp	.+236    	; 0x566 <DIO_u8GetPinValue+0x114>
 47a:	8c 81       	ldd	r24, Y+4	; 0x04
 47c:	88 30       	cpi	r24, 0x08	; 8
 47e:	08 f0       	brcs	.+2      	; 0x482 <DIO_u8GetPinValue+0x30>
 480:	72 c0       	rjmp	.+228    	; 0x566 <DIO_u8GetPinValue+0x114>
 482:	8d 81       	ldd	r24, Y+5	; 0x05
 484:	9e 81       	ldd	r25, Y+6	; 0x06
 486:	00 97       	sbiw	r24, 0x00	; 0
 488:	09 f4       	brne	.+2      	; 0x48c <DIO_u8GetPinValue+0x3a>
 48a:	6d c0       	rjmp	.+218    	; 0x566 <DIO_u8GetPinValue+0x114>
    {
        switch (Copy_u8PortId)
 48c:	8b 81       	ldd	r24, Y+3	; 0x03
 48e:	28 2f       	mov	r18, r24
 490:	30 e0       	ldi	r19, 0x00	; 0
 492:	38 87       	std	Y+8, r19	; 0x08
 494:	2f 83       	std	Y+7, r18	; 0x07
 496:	4f 81       	ldd	r20, Y+7	; 0x07
 498:	58 85       	ldd	r21, Y+8	; 0x08
 49a:	41 30       	cpi	r20, 0x01	; 1
 49c:	51 05       	cpc	r21, r1
 49e:	49 f1       	breq	.+82     	; 0x4f2 <DIO_u8GetPinValue+0xa0>
 4a0:	8f 81       	ldd	r24, Y+7	; 0x07
 4a2:	98 85       	ldd	r25, Y+8	; 0x08
 4a4:	82 30       	cpi	r24, 0x02	; 2
 4a6:	91 05       	cpc	r25, r1
 4a8:	09 f4       	brne	.+2      	; 0x4ac <DIO_u8GetPinValue+0x5a>
 4aa:	40 c0       	rjmp	.+128    	; 0x52c <DIO_u8GetPinValue+0xda>
 4ac:	2f 81       	ldd	r18, Y+7	; 0x07
 4ae:	38 85       	ldd	r19, Y+8	; 0x08
 4b0:	21 15       	cp	r18, r1
 4b2:	31 05       	cpc	r19, r1
 4b4:	09 f0       	breq	.+2      	; 0x4b8 <DIO_u8GetPinValue+0x66>
 4b6:	58 c0       	rjmp	.+176    	; 0x568 <DIO_u8GetPinValue+0x116>
        {
            case DIO_u8_PORTB :
                Local_u8PinValue = GET_BIT(DIO_PINB_REG,Copy_u8PinId);
 4b8:	e3 e2       	ldi	r30, 0x23	; 35
 4ba:	f0 e0       	ldi	r31, 0x00	; 0
 4bc:	80 81       	ld	r24, Z
 4be:	28 2f       	mov	r18, r24
 4c0:	30 e0       	ldi	r19, 0x00	; 0
 4c2:	8c 81       	ldd	r24, Y+4	; 0x04
 4c4:	88 2f       	mov	r24, r24
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	a9 01       	movw	r20, r18
 4ca:	02 c0       	rjmp	.+4      	; 0x4d0 <DIO_u8GetPinValue+0x7e>
 4cc:	55 95       	asr	r21
 4ce:	47 95       	ror	r20
 4d0:	8a 95       	dec	r24
 4d2:	e2 f7       	brpl	.-8      	; 0x4cc <DIO_u8GetPinValue+0x7a>
 4d4:	ca 01       	movw	r24, r20
 4d6:	81 70       	andi	r24, 0x01	; 1
 4d8:	89 83       	std	Y+1, r24	; 0x01
                if(DIO_u8_HIGH==Local_u8PinValue)
 4da:	89 81       	ldd	r24, Y+1	; 0x01
 4dc:	81 30       	cpi	r24, 0x01	; 1
 4de:	29 f4       	brne	.+10     	; 0x4ea <DIO_u8GetPinValue+0x98>
                	{*Copy_Pu8PinValue = DIO_u8_HIGH;}
 4e0:	ed 81       	ldd	r30, Y+5	; 0x05
 4e2:	fe 81       	ldd	r31, Y+6	; 0x06
 4e4:	81 e0       	ldi	r24, 0x01	; 1
 4e6:	80 83       	st	Z, r24
 4e8:	3f c0       	rjmp	.+126    	; 0x568 <DIO_u8GetPinValue+0x116>
                else
                	{*Copy_Pu8PinValue = DIO_u8_LOW ;}
 4ea:	ed 81       	ldd	r30, Y+5	; 0x05
 4ec:	fe 81       	ldd	r31, Y+6	; 0x06
 4ee:	10 82       	st	Z, r1
 4f0:	3b c0       	rjmp	.+118    	; 0x568 <DIO_u8GetPinValue+0x116>
            break;
            case DIO_u8_PORTC :
                Local_u8PinValue = GET_BIT(DIO_PINC_REG,Copy_u8PinId);
 4f2:	e6 e2       	ldi	r30, 0x26	; 38
 4f4:	f0 e0       	ldi	r31, 0x00	; 0
 4f6:	80 81       	ld	r24, Z
 4f8:	28 2f       	mov	r18, r24
 4fa:	30 e0       	ldi	r19, 0x00	; 0
 4fc:	8c 81       	ldd	r24, Y+4	; 0x04
 4fe:	88 2f       	mov	r24, r24
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	a9 01       	movw	r20, r18
 504:	02 c0       	rjmp	.+4      	; 0x50a <DIO_u8GetPinValue+0xb8>
 506:	55 95       	asr	r21
 508:	47 95       	ror	r20
 50a:	8a 95       	dec	r24
 50c:	e2 f7       	brpl	.-8      	; 0x506 <DIO_u8GetPinValue+0xb4>
 50e:	ca 01       	movw	r24, r20
 510:	81 70       	andi	r24, 0x01	; 1
 512:	89 83       	std	Y+1, r24	; 0x01
                if(DIO_u8_HIGH==Local_u8PinValue)
 514:	89 81       	ldd	r24, Y+1	; 0x01
 516:	81 30       	cpi	r24, 0x01	; 1
 518:	29 f4       	brne	.+10     	; 0x524 <DIO_u8GetPinValue+0xd2>
					{*Copy_Pu8PinValue = DIO_u8_HIGH;}
 51a:	ed 81       	ldd	r30, Y+5	; 0x05
 51c:	fe 81       	ldd	r31, Y+6	; 0x06
 51e:	81 e0       	ldi	r24, 0x01	; 1
 520:	80 83       	st	Z, r24
 522:	22 c0       	rjmp	.+68     	; 0x568 <DIO_u8GetPinValue+0x116>
				else
					{*Copy_Pu8PinValue = DIO_u8_LOW ;}
 524:	ed 81       	ldd	r30, Y+5	; 0x05
 526:	fe 81       	ldd	r31, Y+6	; 0x06
 528:	10 82       	st	Z, r1
 52a:	1e c0       	rjmp	.+60     	; 0x568 <DIO_u8GetPinValue+0x116>
            break;
            case DIO_u8_PORTD :
                Local_u8PinValue = GET_BIT(DIO_PIND_REG,Copy_u8PinId);
 52c:	e9 e2       	ldi	r30, 0x29	; 41
 52e:	f0 e0       	ldi	r31, 0x00	; 0
 530:	80 81       	ld	r24, Z
 532:	28 2f       	mov	r18, r24
 534:	30 e0       	ldi	r19, 0x00	; 0
 536:	8c 81       	ldd	r24, Y+4	; 0x04
 538:	88 2f       	mov	r24, r24
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	a9 01       	movw	r20, r18
 53e:	02 c0       	rjmp	.+4      	; 0x544 <DIO_u8GetPinValue+0xf2>
 540:	55 95       	asr	r21
 542:	47 95       	ror	r20
 544:	8a 95       	dec	r24
 546:	e2 f7       	brpl	.-8      	; 0x540 <DIO_u8GetPinValue+0xee>
 548:	ca 01       	movw	r24, r20
 54a:	81 70       	andi	r24, 0x01	; 1
 54c:	89 83       	std	Y+1, r24	; 0x01
                if(DIO_u8_HIGH==Local_u8PinValue)
 54e:	89 81       	ldd	r24, Y+1	; 0x01
 550:	81 30       	cpi	r24, 0x01	; 1
 552:	29 f4       	brne	.+10     	; 0x55e <DIO_u8GetPinValue+0x10c>
					{*Copy_Pu8PinValue = DIO_u8_HIGH;}
 554:	ed 81       	ldd	r30, Y+5	; 0x05
 556:	fe 81       	ldd	r31, Y+6	; 0x06
 558:	81 e0       	ldi	r24, 0x01	; 1
 55a:	80 83       	st	Z, r24
 55c:	05 c0       	rjmp	.+10     	; 0x568 <DIO_u8GetPinValue+0x116>
				else
					{*Copy_Pu8PinValue = DIO_u8_LOW ;}
 55e:	ed 81       	ldd	r30, Y+5	; 0x05
 560:	fe 81       	ldd	r31, Y+6	; 0x06
 562:	10 82       	st	Z, r1
 564:	01 c0       	rjmp	.+2      	; 0x568 <DIO_u8GetPinValue+0x116>

        }
    }
    else
    {
        Local_u8ReturnState = STD_TYPE_NOK;
 566:	1a 82       	std	Y+2, r1	; 0x02
    }
    return Local_u8ReturnState;
 568:	8a 81       	ldd	r24, Y+2	; 0x02
}
 56a:	28 96       	adiw	r28, 0x08	; 8
 56c:	0f b6       	in	r0, 0x3f	; 63
 56e:	f8 94       	cli
 570:	de bf       	out	0x3e, r29	; 62
 572:	0f be       	out	0x3f, r0	; 63
 574:	cd bf       	out	0x3d, r28	; 61
 576:	cf 91       	pop	r28
 578:	df 91       	pop	r29
 57a:	08 95       	ret

0000057c <DIO_u8SetPortDirection>:

u8 DIO_u8SetPortDirection (u8 Copy_u8PortId, u8 Copy_u8PortDirection)
{
 57c:	df 93       	push	r29
 57e:	cf 93       	push	r28
 580:	cd b7       	in	r28, 0x3d	; 61
 582:	de b7       	in	r29, 0x3e	; 62
 584:	2b 97       	sbiw	r28, 0x0b	; 11
 586:	0f b6       	in	r0, 0x3f	; 63
 588:	f8 94       	cli
 58a:	de bf       	out	0x3e, r29	; 62
 58c:	0f be       	out	0x3f, r0	; 63
 58e:	cd bf       	out	0x3d, r28	; 61
 590:	8a 83       	std	Y+2, r24	; 0x02
 592:	6b 83       	std	Y+3, r22	; 0x03
    u8 Local_u8ReturnState = STD_TYPE_OK;
 594:	81 e0       	ldi	r24, 0x01	; 1
 596:	89 83       	std	Y+1, r24	; 0x01
    if((Copy_u8PortId <= DIO_u8_PORTD)&&((Copy_u8PortDirection == DIO_u8_INPUT)||(Copy_u8PortDirection == DIO_u8_OUTPUT)))
 598:	8a 81       	ldd	r24, Y+2	; 0x02
 59a:	83 30       	cpi	r24, 0x03	; 3
 59c:	08 f0       	brcs	.+2      	; 0x5a0 <DIO_u8SetPortDirection+0x24>
 59e:	60 c0       	rjmp	.+192    	; 0x660 <DIO_u8SetPortDirection+0xe4>
 5a0:	8b 81       	ldd	r24, Y+3	; 0x03
 5a2:	88 23       	and	r24, r24
 5a4:	21 f0       	breq	.+8      	; 0x5ae <DIO_u8SetPortDirection+0x32>
 5a6:	8b 81       	ldd	r24, Y+3	; 0x03
 5a8:	81 30       	cpi	r24, 0x01	; 1
 5aa:	09 f0       	breq	.+2      	; 0x5ae <DIO_u8SetPortDirection+0x32>
 5ac:	59 c0       	rjmp	.+178    	; 0x660 <DIO_u8SetPortDirection+0xe4>
    {
        switch (Copy_u8PortId)
 5ae:	8a 81       	ldd	r24, Y+2	; 0x02
 5b0:	28 2f       	mov	r18, r24
 5b2:	30 e0       	ldi	r19, 0x00	; 0
 5b4:	3b 87       	std	Y+11, r19	; 0x0b
 5b6:	2a 87       	std	Y+10, r18	; 0x0a
 5b8:	8a 85       	ldd	r24, Y+10	; 0x0a
 5ba:	9b 85       	ldd	r25, Y+11	; 0x0b
 5bc:	81 30       	cpi	r24, 0x01	; 1
 5be:	91 05       	cpc	r25, r1
 5c0:	09 f1       	breq	.+66     	; 0x604 <DIO_u8SetPortDirection+0x88>
 5c2:	2a 85       	ldd	r18, Y+10	; 0x0a
 5c4:	3b 85       	ldd	r19, Y+11	; 0x0b
 5c6:	22 30       	cpi	r18, 0x02	; 2
 5c8:	31 05       	cpc	r19, r1
 5ca:	99 f1       	breq	.+102    	; 0x632 <DIO_u8SetPortDirection+0xb6>
 5cc:	8a 85       	ldd	r24, Y+10	; 0x0a
 5ce:	9b 85       	ldd	r25, Y+11	; 0x0b
 5d0:	00 97       	sbiw	r24, 0x00	; 0
 5d2:	09 f0       	breq	.+2      	; 0x5d6 <DIO_u8SetPortDirection+0x5a>
 5d4:	46 c0       	rjmp	.+140    	; 0x662 <DIO_u8SetPortDirection+0xe6>
        {
            case DIO_u8_PORTB : 
                switch (Copy_u8PortDirection)
 5d6:	8b 81       	ldd	r24, Y+3	; 0x03
 5d8:	28 2f       	mov	r18, r24
 5da:	30 e0       	ldi	r19, 0x00	; 0
 5dc:	39 87       	std	Y+9, r19	; 0x09
 5de:	28 87       	std	Y+8, r18	; 0x08
 5e0:	88 85       	ldd	r24, Y+8	; 0x08
 5e2:	99 85       	ldd	r25, Y+9	; 0x09
 5e4:	00 97       	sbiw	r24, 0x00	; 0
 5e6:	51 f0       	breq	.+20     	; 0x5fc <DIO_u8SetPortDirection+0x80>
 5e8:	28 85       	ldd	r18, Y+8	; 0x08
 5ea:	39 85       	ldd	r19, Y+9	; 0x09
 5ec:	21 30       	cpi	r18, 0x01	; 1
 5ee:	31 05       	cpc	r19, r1
 5f0:	c1 f5       	brne	.+112    	; 0x662 <DIO_u8SetPortDirection+0xe6>
                {
                    case DIO_u8_OUTPUT:  DIO_DDRB_REG =0xff; break;
 5f2:	e4 e2       	ldi	r30, 0x24	; 36
 5f4:	f0 e0       	ldi	r31, 0x00	; 0
 5f6:	8f ef       	ldi	r24, 0xFF	; 255
 5f8:	80 83       	st	Z, r24
 5fa:	33 c0       	rjmp	.+102    	; 0x662 <DIO_u8SetPortDirection+0xe6>
                    case DIO_u8_INPUT :  DIO_DDRB_REG =0x00; break;
 5fc:	e4 e2       	ldi	r30, 0x24	; 36
 5fe:	f0 e0       	ldi	r31, 0x00	; 0
 600:	10 82       	st	Z, r1
 602:	2f c0       	rjmp	.+94     	; 0x662 <DIO_u8SetPortDirection+0xe6>
                }
            break;
            case DIO_u8_PORTC : 
                switch (Copy_u8PortDirection)
 604:	8b 81       	ldd	r24, Y+3	; 0x03
 606:	28 2f       	mov	r18, r24
 608:	30 e0       	ldi	r19, 0x00	; 0
 60a:	3f 83       	std	Y+7, r19	; 0x07
 60c:	2e 83       	std	Y+6, r18	; 0x06
 60e:	8e 81       	ldd	r24, Y+6	; 0x06
 610:	9f 81       	ldd	r25, Y+7	; 0x07
 612:	00 97       	sbiw	r24, 0x00	; 0
 614:	51 f0       	breq	.+20     	; 0x62a <DIO_u8SetPortDirection+0xae>
 616:	2e 81       	ldd	r18, Y+6	; 0x06
 618:	3f 81       	ldd	r19, Y+7	; 0x07
 61a:	21 30       	cpi	r18, 0x01	; 1
 61c:	31 05       	cpc	r19, r1
 61e:	09 f5       	brne	.+66     	; 0x662 <DIO_u8SetPortDirection+0xe6>
                {
                    case DIO_u8_OUTPUT:  DIO_DDRC_REG =0xff; break;
 620:	e7 e2       	ldi	r30, 0x27	; 39
 622:	f0 e0       	ldi	r31, 0x00	; 0
 624:	8f ef       	ldi	r24, 0xFF	; 255
 626:	80 83       	st	Z, r24
 628:	1c c0       	rjmp	.+56     	; 0x662 <DIO_u8SetPortDirection+0xe6>
                    case DIO_u8_INPUT :  DIO_DDRC_REG =0x00; break;
 62a:	e7 e2       	ldi	r30, 0x27	; 39
 62c:	f0 e0       	ldi	r31, 0x00	; 0
 62e:	10 82       	st	Z, r1
 630:	18 c0       	rjmp	.+48     	; 0x662 <DIO_u8SetPortDirection+0xe6>
                }
            break;
            case DIO_u8_PORTD : 
                switch (Copy_u8PortDirection)
 632:	8b 81       	ldd	r24, Y+3	; 0x03
 634:	28 2f       	mov	r18, r24
 636:	30 e0       	ldi	r19, 0x00	; 0
 638:	3d 83       	std	Y+5, r19	; 0x05
 63a:	2c 83       	std	Y+4, r18	; 0x04
 63c:	8c 81       	ldd	r24, Y+4	; 0x04
 63e:	9d 81       	ldd	r25, Y+5	; 0x05
 640:	00 97       	sbiw	r24, 0x00	; 0
 642:	51 f0       	breq	.+20     	; 0x658 <DIO_u8SetPortDirection+0xdc>
 644:	2c 81       	ldd	r18, Y+4	; 0x04
 646:	3d 81       	ldd	r19, Y+5	; 0x05
 648:	21 30       	cpi	r18, 0x01	; 1
 64a:	31 05       	cpc	r19, r1
 64c:	51 f4       	brne	.+20     	; 0x662 <DIO_u8SetPortDirection+0xe6>
                {
                    case DIO_u8_OUTPUT:  DIO_DDRD_REG =0xff; break;
 64e:	ea e2       	ldi	r30, 0x2A	; 42
 650:	f0 e0       	ldi	r31, 0x00	; 0
 652:	8f ef       	ldi	r24, 0xFF	; 255
 654:	80 83       	st	Z, r24
 656:	05 c0       	rjmp	.+10     	; 0x662 <DIO_u8SetPortDirection+0xe6>
                    case DIO_u8_INPUT :  DIO_DDRD_REG =0x00; break;
 658:	ea e2       	ldi	r30, 0x2A	; 42
 65a:	f0 e0       	ldi	r31, 0x00	; 0
 65c:	10 82       	st	Z, r1
 65e:	01 c0       	rjmp	.+2      	; 0x662 <DIO_u8SetPortDirection+0xe6>
            break;
        }
    }
    else 
    {
        Local_u8ReturnState = STD_TYPE_NOK;
 660:	19 82       	std	Y+1, r1	; 0x01
    }
    return Local_u8ReturnState;
 662:	89 81       	ldd	r24, Y+1	; 0x01

}
 664:	2b 96       	adiw	r28, 0x0b	; 11
 666:	0f b6       	in	r0, 0x3f	; 63
 668:	f8 94       	cli
 66a:	de bf       	out	0x3e, r29	; 62
 66c:	0f be       	out	0x3f, r0	; 63
 66e:	cd bf       	out	0x3d, r28	; 61
 670:	cf 91       	pop	r28
 672:	df 91       	pop	r29
 674:	08 95       	ret

00000676 <DIO_u8SetPortValue>:

u8 DIO_u8SetPortValue     (u8 Copy_u8PortId, u8 Copy_u8PortValue)
{
 676:	df 93       	push	r29
 678:	cf 93       	push	r28
 67a:	00 d0       	rcall	.+0      	; 0x67c <DIO_u8SetPortValue+0x6>
 67c:	00 d0       	rcall	.+0      	; 0x67e <DIO_u8SetPortValue+0x8>
 67e:	0f 92       	push	r0
 680:	cd b7       	in	r28, 0x3d	; 61
 682:	de b7       	in	r29, 0x3e	; 62
 684:	8a 83       	std	Y+2, r24	; 0x02
 686:	6b 83       	std	Y+3, r22	; 0x03
    u8 Local_u8ReturnState = STD_TYPE_OK;
 688:	81 e0       	ldi	r24, 0x01	; 1
 68a:	89 83       	std	Y+1, r24	; 0x01
    switch (Copy_u8PortId)
 68c:	8a 81       	ldd	r24, Y+2	; 0x02
 68e:	28 2f       	mov	r18, r24
 690:	30 e0       	ldi	r19, 0x00	; 0
 692:	3d 83       	std	Y+5, r19	; 0x05
 694:	2c 83       	std	Y+4, r18	; 0x04
 696:	8c 81       	ldd	r24, Y+4	; 0x04
 698:	9d 81       	ldd	r25, Y+5	; 0x05
 69a:	81 30       	cpi	r24, 0x01	; 1
 69c:	91 05       	cpc	r25, r1
 69e:	71 f0       	breq	.+28     	; 0x6bc <DIO_u8SetPortValue+0x46>
 6a0:	2c 81       	ldd	r18, Y+4	; 0x04
 6a2:	3d 81       	ldd	r19, Y+5	; 0x05
 6a4:	22 30       	cpi	r18, 0x02	; 2
 6a6:	31 05       	cpc	r19, r1
 6a8:	71 f0       	breq	.+28     	; 0x6c6 <DIO_u8SetPortValue+0x50>
 6aa:	8c 81       	ldd	r24, Y+4	; 0x04
 6ac:	9d 81       	ldd	r25, Y+5	; 0x05
 6ae:	00 97       	sbiw	r24, 0x00	; 0
 6b0:	79 f4       	brne	.+30     	; 0x6d0 <DIO_u8SetPortValue+0x5a>
    {
        case DIO_u8_PORTB : DIO_PORTB_REG = Copy_u8PortValue; break;
 6b2:	e5 e2       	ldi	r30, 0x25	; 37
 6b4:	f0 e0       	ldi	r31, 0x00	; 0
 6b6:	8b 81       	ldd	r24, Y+3	; 0x03
 6b8:	80 83       	st	Z, r24
 6ba:	0b c0       	rjmp	.+22     	; 0x6d2 <DIO_u8SetPortValue+0x5c>
        case DIO_u8_PORTC : DIO_PORTC_REG = Copy_u8PortValue; break;
 6bc:	e8 e2       	ldi	r30, 0x28	; 40
 6be:	f0 e0       	ldi	r31, 0x00	; 0
 6c0:	8b 81       	ldd	r24, Y+3	; 0x03
 6c2:	80 83       	st	Z, r24
 6c4:	06 c0       	rjmp	.+12     	; 0x6d2 <DIO_u8SetPortValue+0x5c>
        case DIO_u8_PORTD : DIO_PORTD_REG = Copy_u8PortValue; break;
 6c6:	eb e2       	ldi	r30, 0x2B	; 43
 6c8:	f0 e0       	ldi	r31, 0x00	; 0
 6ca:	8b 81       	ldd	r24, Y+3	; 0x03
 6cc:	80 83       	st	Z, r24
 6ce:	01 c0       	rjmp	.+2      	; 0x6d2 <DIO_u8SetPortValue+0x5c>
        default : Local_u8ReturnState = STD_TYPE_NOK;         break;
 6d0:	19 82       	std	Y+1, r1	; 0x01
    }
    return Local_u8ReturnState;
 6d2:	89 81       	ldd	r24, Y+1	; 0x01
}
 6d4:	0f 90       	pop	r0
 6d6:	0f 90       	pop	r0
 6d8:	0f 90       	pop	r0
 6da:	0f 90       	pop	r0
 6dc:	0f 90       	pop	r0
 6de:	cf 91       	pop	r28
 6e0:	df 91       	pop	r29
 6e2:	08 95       	ret

000006e4 <Dio_u8GetPortValue>:

u8 Dio_u8GetPortValue     (u8 Copy_u8PortId,u8 *Copy_Pu8PortValue)
{
 6e4:	df 93       	push	r29
 6e6:	cf 93       	push	r28
 6e8:	00 d0       	rcall	.+0      	; 0x6ea <Dio_u8GetPortValue+0x6>
 6ea:	00 d0       	rcall	.+0      	; 0x6ec <Dio_u8GetPortValue+0x8>
 6ec:	00 d0       	rcall	.+0      	; 0x6ee <Dio_u8GetPortValue+0xa>
 6ee:	cd b7       	in	r28, 0x3d	; 61
 6f0:	de b7       	in	r29, 0x3e	; 62
 6f2:	8a 83       	std	Y+2, r24	; 0x02
 6f4:	7c 83       	std	Y+4, r23	; 0x04
 6f6:	6b 83       	std	Y+3, r22	; 0x03
    u8 Local_u8ReturnState = STD_TYPE_OK;
 6f8:	81 e0       	ldi	r24, 0x01	; 1
 6fa:	89 83       	std	Y+1, r24	; 0x01
    if((Copy_u8PortId >= DIO_u8_PORTD)&&(Copy_Pu8PortValue!=NULL))
 6fc:	8a 81       	ldd	r24, Y+2	; 0x02
 6fe:	82 30       	cpi	r24, 0x02	; 2
 700:	60 f1       	brcs	.+88     	; 0x75a <Dio_u8GetPortValue+0x76>
 702:	8b 81       	ldd	r24, Y+3	; 0x03
 704:	9c 81       	ldd	r25, Y+4	; 0x04
 706:	00 97       	sbiw	r24, 0x00	; 0
 708:	41 f1       	breq	.+80     	; 0x75a <Dio_u8GetPortValue+0x76>
    {
        switch (Copy_u8PortId)
 70a:	8a 81       	ldd	r24, Y+2	; 0x02
 70c:	28 2f       	mov	r18, r24
 70e:	30 e0       	ldi	r19, 0x00	; 0
 710:	3e 83       	std	Y+6, r19	; 0x06
 712:	2d 83       	std	Y+5, r18	; 0x05
 714:	8d 81       	ldd	r24, Y+5	; 0x05
 716:	9e 81       	ldd	r25, Y+6	; 0x06
 718:	81 30       	cpi	r24, 0x01	; 1
 71a:	91 05       	cpc	r25, r1
 71c:	81 f0       	breq	.+32     	; 0x73e <Dio_u8GetPortValue+0x5a>
 71e:	2d 81       	ldd	r18, Y+5	; 0x05
 720:	3e 81       	ldd	r19, Y+6	; 0x06
 722:	22 30       	cpi	r18, 0x02	; 2
 724:	31 05       	cpc	r19, r1
 726:	91 f0       	breq	.+36     	; 0x74c <Dio_u8GetPortValue+0x68>
 728:	8d 81       	ldd	r24, Y+5	; 0x05
 72a:	9e 81       	ldd	r25, Y+6	; 0x06
 72c:	00 97       	sbiw	r24, 0x00	; 0
 72e:	b1 f4       	brne	.+44     	; 0x75c <Dio_u8GetPortValue+0x78>
        {
        case DIO_u8_PORTB :*Copy_Pu8PortValue = DIO_PINB_REG; break;
 730:	e3 e2       	ldi	r30, 0x23	; 35
 732:	f0 e0       	ldi	r31, 0x00	; 0
 734:	80 81       	ld	r24, Z
 736:	eb 81       	ldd	r30, Y+3	; 0x03
 738:	fc 81       	ldd	r31, Y+4	; 0x04
 73a:	80 83       	st	Z, r24
 73c:	0f c0       	rjmp	.+30     	; 0x75c <Dio_u8GetPortValue+0x78>
        case DIO_u8_PORTC :*Copy_Pu8PortValue = DIO_PINC_REG; break;
 73e:	e6 e2       	ldi	r30, 0x26	; 38
 740:	f0 e0       	ldi	r31, 0x00	; 0
 742:	80 81       	ld	r24, Z
 744:	eb 81       	ldd	r30, Y+3	; 0x03
 746:	fc 81       	ldd	r31, Y+4	; 0x04
 748:	80 83       	st	Z, r24
 74a:	08 c0       	rjmp	.+16     	; 0x75c <Dio_u8GetPortValue+0x78>
        case DIO_u8_PORTD :*Copy_Pu8PortValue = DIO_PIND_REG; break;
 74c:	e9 e2       	ldi	r30, 0x29	; 41
 74e:	f0 e0       	ldi	r31, 0x00	; 0
 750:	80 81       	ld	r24, Z
 752:	eb 81       	ldd	r30, Y+3	; 0x03
 754:	fc 81       	ldd	r31, Y+4	; 0x04
 756:	80 83       	st	Z, r24
 758:	01 c0       	rjmp	.+2      	; 0x75c <Dio_u8GetPortValue+0x78>
        }
    }
    else 
    {
        Local_u8ReturnState = STD_TYPE_NOK;
 75a:	19 82       	std	Y+1, r1	; 0x01
    }
    return Local_u8ReturnState;
 75c:	89 81       	ldd	r24, Y+1	; 0x01
}
 75e:	26 96       	adiw	r28, 0x06	; 6
 760:	0f b6       	in	r0, 0x3f	; 63
 762:	f8 94       	cli
 764:	de bf       	out	0x3e, r29	; 62
 766:	0f be       	out	0x3f, r0	; 63
 768:	cd bf       	out	0x3d, r28	; 61
 76a:	cf 91       	pop	r28
 76c:	df 91       	pop	r29
 76e:	08 95       	ret

00000770 <main>:
/*MCAL layer*/
#include "DIO_interface.h"


int main ()
{
 770:	df 93       	push	r29
 772:	cf 93       	push	r28
 774:	0f 92       	push	r0
 776:	cd b7       	in	r28, 0x3d	; 61
 778:	de b7       	in	r29, 0x3e	; 62
	u8 Local_u8Buffer = 0;
 77a:	19 82       	std	Y+1, r1	; 0x01

	/*pin configuration*/
	DIO_voidInit();
 77c:	0e 94 40 00 	call	0x80	; 0x80 <DIO_voidInit>

	//DIO_u8SetPinDirection(DIO_u8_PORTB,DIO_u8_PIN5,DIO_u8_OUTPUT);
	while(1)
	{
		DIO_u8GetPinValue(DIO_u8_PORTD,DIO_u8_PIN3,&Local_u8Buffer);
 780:	82 e0       	ldi	r24, 0x02	; 2
 782:	63 e0       	ldi	r22, 0x03	; 3
 784:	9e 01       	movw	r18, r28
 786:	2f 5f       	subi	r18, 0xFF	; 255
 788:	3f 4f       	sbci	r19, 0xFF	; 255
 78a:	a9 01       	movw	r20, r18
 78c:	0e 94 29 02 	call	0x452	; 0x452 <DIO_u8GetPinValue>

		if(DIO_u8_HIGH == Local_u8Buffer)
 790:	89 81       	ldd	r24, Y+1	; 0x01
 792:	81 30       	cpi	r24, 0x01	; 1
 794:	31 f4       	brne	.+12     	; 0x7a2 <main+0x32>
		{
			DIO_u8SetPinValue(DIO_u8_PORTB,DIO_u8_PIN5,DIO_u8_HIGH);
 796:	80 e0       	ldi	r24, 0x00	; 0
 798:	65 e0       	ldi	r22, 0x05	; 5
 79a:	41 e0       	ldi	r20, 0x01	; 1
 79c:	0e 94 43 01 	call	0x286	; 0x286 <DIO_u8SetPinValue>
 7a0:	ef cf       	rjmp	.-34     	; 0x780 <main+0x10>
		}
		else
		{
			DIO_u8SetPinValue(DIO_u8_PORTB,DIO_u8_PIN5,DIO_u8_LOW);
 7a2:	80 e0       	ldi	r24, 0x00	; 0
 7a4:	65 e0       	ldi	r22, 0x05	; 5
 7a6:	40 e0       	ldi	r20, 0x00	; 0
 7a8:	0e 94 43 01 	call	0x286	; 0x286 <DIO_u8SetPinValue>
 7ac:	e9 cf       	rjmp	.-46     	; 0x780 <main+0x10>

000007ae <_exit>:
 7ae:	f8 94       	cli

000007b0 <__stop_program>:
 7b0:	ff cf       	rjmp	.-2      	; 0x7b0 <__stop_program>
