/***************************************
 * @author : Hossam Emad
 * @date : 22/3/2024
 * @SWC : FingerPrint 
 * @about :
****************************************/
#include "BitMath.h"
#include "STD.h"
#include <util/delay.h>

#include "DIO_Interface.h"
#include "GIE_interface.h"
#include "UART_Interface.h"
#include "LCD_Interface.h"

#include "FP_config.h"
#include "FP_private.h"
#include "FP_interface.h"



void FP_intit(void)
{
    M_DIO_Void_SetPinDirection(PD1_PIN,OUTPUT);
    M_DIO_Void_SetPinDirection(PA6_PIN,OUTPUT);
    _delay_ms(200);
    UART_Init();
    /*receive*/
    GIE_voidEnable();

}


/*PACKAGE IDENTIFIER(PID) CHOICES

**************************/    

void FPSend(u8 copy_u8PID,u16 Copy_u16PackLength,u8* copy_Pu8Pack)
{
    U8 local_u8RetuenState = STD_NOK;
    U16 Local_u16CS=0;
    u8 arraySize = Copy_u16PackLength-2;//pack length refer to array length + 2 bits check sum
    /*header*/
    UART_SendByte(0xEF);
    UART_SendByte(0x01);
    /*add*/
    UART_SendByte(0xFF);
    UART_SendByte(0xFF);
    UART_SendByte(0xFF);
    UART_SendByte(0xFF);
    /*package identifier*/
    switch (copy_u8PID)
    {
    case CMND_PACK:UART_SendByte(CMND_PACK);   break;
    case DATA_PACK:UART_SendByte(DATA_PACK);   break;
    case ACK_PACK :UART_SendByte(ACK_PACK);    break;
    case END_PACK :UART_SendByte(END_PACK);    break;
    default:                                   break;
    }
    /*PACKAGE LENGTH*/
    UART_SendByte((u8)(Copy_u16PackLength>>8));
    UART_SendByte((u8)Copy_u16PackLength);
    /*package sending*/
    if ((copy_Pu8Pack != NULL)&&(Copy_u16PackLength<=256))
	{
		for(int i =0 ;i<arraySize;i++)
		{
			UART_SendByte(copy_Pu8Pack[i]);
            Local_u16CS += copy_Pu8Pack[i];
		}
	}
	else
	{
		local_u8RetuenState = STD_NOK;
	}
    /*CHECK SUM*/
    Local_u16CS +=(Copy_u16PackLength +(u16)copy_u8PID); 
    UART_SendByte((Local_u16CS>>8));
    UART_SendByte((Local_u8CS8));
}



